steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.4.6'
  entrypoint: 'sh'
  secretEnv: ['admin_token', 'push_installation_id', 'push_installation_key', 'email', 'domain', 'home_dir', 'home_user']
  args: 
  - '-c'
  - |
      if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME
        echo -e "$$admin_token\n$$push_installation_id\n$$push_installation_key\n$$email\n$$domain\n$$home_dir\n$$home_user" > $BRANCH_NAME.auto.tfvars
        terraform init
      else
        for dir in terraform/environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 

- id: 'tf plan'
  name: 'hashicorp/terraform:1.4.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME
        terraform plan
      else
        for dir in terraform/environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}  
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform plan || exit 1
          cd ../../
        done
      fi 

- id: 'tf apply'
  name: 'hashicorp/terraform:1.4.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME      
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_NUMBER/secrets/admin_token-$BRANCH_NAME/versions/latest
    env: admin_token
  - versionName: projects/$PROJECT_NUMBER/secrets/push_installation_id-$BRANCH_NAME/versions/latest
    env: push_installation_id
  - versionName: projects/$PROJECT_NUMBER/secrets/push_installation_key-$BRANCH_NAME/versions/latest
    env: push_installation_key
  - versionName: projects/$PROJECT_NUMBER/secrets/email/versions/latest
    env: email
  - versionName: projects/$PROJECT_NUMBER/secrets/domain-$BRANCH_NAME/versions/latest
    env: domain
  - versionName: projects/$PROJECT_NUMBER/secrets/home_dir-$BRANCH_NAME/versions/latest
    env: home_dir
  - versionName: projects/$PROJECT_NUMBER/secrets/home_user-$BRANCH_NAME/versions/latest
    env: home_user
    