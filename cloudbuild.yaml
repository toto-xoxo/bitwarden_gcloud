steps:
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  secretEnv: ['admin_token', 'push_installation_id', 'push_installation_key', 'email', 'domain', 'home_dir']
  args:
  - '-c'
  - |
      set -x
      echo "branch $BRANCH_NAME"
      if [! -z "$BRANCH_NAME"]] && [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME
        echo -e "$$admin_token\n$$push_installation_id\n$$push_installation_key\n$$email\n$$domain\n$$home_dir" > $BRANCH_NAME.auto.tfvars
        echo "run init"
        terraform init
        echo "run validate"
        terraform validate
        echo "run plan"
        terraform plan -out terraform.plan
        terraform apply -auto-approve terraform.plan
      else
        for dir in terraform/environments/*/
        do
          cd ${dir}
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init
          terraform validate
          terraform plan || exit 1
          cd ../../
        done
      fi
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_NUMBER/secrets/admin_token-$BRANCH_NAME/versions/latest
    env: admin_token
  - versionName: projects/$PROJECT_NUMBER/secrets/push_installation_id-$BRANCH_NAME/versions/latest
    env: push_installation_id
  - versionName: projects/$PROJECT_NUMBER/secrets/push_installation_key-$BRANCH_NAME/versions/latest
    env: push_installation_key
  - versionName: projects/$PROJECT_NUMBER/secrets/email/versions/latest
    env: email
  - versionName: projects/$PROJECT_NUMBER/secrets/domain-$BRANCH_NAME/versions/latest
    env: domain
  - versionName: projects/$PROJECT_NUMBER/secrets/home_dir-$BRANCH_NAME/versions/latest
    env: home_dir
