version: '3'

services:
  vaultwarden:
    #build: ./docker/bitwarden                                  # backup, in case container registry is not responsive
    image: ghcr.io/dadatuputi/bwgc_vaultwarden:master           # from https://github.com/dadatuputi/bwgc_vaultwarden
    restart: always
    container_name: vaultwarden
    depends_on: 
    - proxy
    volumes:
    - ${PWD}/vaultwarden:/data
    environment:
    - LOG_FILE=/data/vaultwarden.log
    - DOMAIN=https://${DOMAIN}          # DOMAIN is set in .env but doesn't have protocol prefix
    - ADMIN_TOKEN
    - BACKUP
    - BACKUP_SCHEDULE
    - BACKUP_DAYS
    - BACKUP_DIR
    - TZ
    - PUSH_ENABLED
    - PUSH_INSTALLATION_ID
    - PUSH_INSTALLATION_KEY

  proxy:
    #build: ./docker/proxy                              # backup, in case container registry is not responsive
    image: ghcr.io/dadatuputi/bwgc_caddy:master         # from https://github.com/dadatuputi/bwgc_proxy
    restart: always
    container_name: proxy
    volumes:
    - ${PWD}/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
    - ${PWD}/caddy/data:/data
    - caddycerts:/root/.caddy
    ports:
    - 80:80
    - 443:443
    environment:
    - LOG_FILE=/data/caddy.log
    - ACME_AGREE=true
    - DOMAIN
    - EMAIL
    - TZ

  fail2ban:
    # https://github.com/dani-garcia/vaultwarden/wiki/Fail2Ban-Setup
    image: crazymax/fail2ban:latest
    restart: always
    container_name: fail2ban
    depends_on:
    - vaultwarden
    volumes:
    - ${PWD}/fail2ban:/data
    - ${PWD}/vaultwarden:/vaultwarden:ro
    network_mode: "host"
    privileged: true
    cap_add:
    - NET_ADMIN
    - NET_RAW
    environment:
    - F2B_DB_PURGE_AGE=30d
    - F2B_LOG_TARGET=/data/fail2ban.log
    - F2B_LOG_LEVEL=INFO
    - F2B_IPTABLES_CHAIN=INPUT
    - TZ

  countryblock:
    #build: ./docker/countryblock                       # backup, in case container registry is not responsive
    image: ghcr.io/dadatuputi/bwgc_countryblock:master  # from https://github.com/dadatuputi/bwgc_countryblock
    restart: always
    container_name: countryblock
    depends_on: 
    - vaultwarden
    network_mode: "host"
    privileged: true
    cap_add:
    - NET_ADMIN
    - NET_RAW
    environment:
    - COUNTRIES
    - COUNTRYBLOCK_SCHEDULE
    - TZ

  watchtower:
    # https://github.com/containrrr/watchtower
    image: containrrr/watchtower
    restart: always
    container_name: watchtower
    depends_on: 
    - vaultwarden
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
    - WATCHTOWER_CLEANUP=true
    - WATCHTOWER_SCHEDULE
    - TZ

volumes:
  caddycerts:
